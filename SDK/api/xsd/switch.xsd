<?xml version="1.0" encoding="UTF-8"?>

<!--THE INFORMATION AND SPECIFICATIONS IN THIS MANUAL REGARDING EXTREME NETWORKS DEVELOPER 
KIT ARE SUBJECT TO CHANGE WITHOUT NOTICE.  ALL STATEMENTS, INFORMATION, AND RECOMMENDATIONS IN THIS MANUAL
ARE PRESENTED WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED.  YOU TAKE FULL RESPONSIBILITY FOR YOUR USE
OF THE DEVELOPER KIT AND THE INFORMATION IN THIS MANUAL.
                
THE DEVELOPER KIT IS LICENSED TO YOU UNDER THE THEN-CURRENT LICENSE TERMS FOR THE  DEVELOPER KIT IN EFFECT AT 
THE TIME THE DEVELOPER KIT IS PROVIDED TO YOU BY EXTREME NETWORKS. PLEASE CONTACT EXTREME NETWORKS IF YOU DO
NOT HAVE A COPY OF THE LICENSE TERMS.  USE OF THE DEVELOPER KIT AND THIS MANUAL CONSTITUTES YOUR ACCEPTANCE 
OF THE DEVELOPER KIT LICENSE TERMS.-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.extremenetworks.com/XMLSchema/xos/switch" xmlns:common="http://www.extremenetworks.com/XMLSchema/xos/common" xmlns:vlan="http://www.extremenetworks.com/XMLSchema/xos/vlan" xmlns:port="http://www.extremenetworks.com/XMLSchema/xos/port" xmlns:idmgr="http://www.extremenetworks.com/XMLSchema/xos/idmgr" xmlns:ipfix="http://www.extremenetworks.com/XMLSchema/xos/ipfix" xmlns:aaa="http://www.extremenetworks.com/XMLSchema/xos/aaa" xmlns:snmp="http://www.extremenetworks.com/XMLSchema/xos/snmp" xmlns:system="http://www.extremenetworks.com/XMLSchema/xos/system" xmlns:fdb="http://www.extremenetworks.com/XMLSchema/xos/fdb" targetNamespace="http://www.extremenetworks.com/XMLSchema/xos/switch" version="A.B.C.D">
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/common" schemaLocation="./common.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/vlan" schemaLocation="./vlan.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/idmgr" schemaLocation="./idmgr.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/ipfix" schemaLocation="./ipfix.xsd"/>
	<!--xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/system" schemaLocation="./system.xsd"/-->
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/port" schemaLocation="./port.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/aaa" schemaLocation="./aaa.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/snmp" schemaLocation="./snmp.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/system" schemaLocation="./system.xsd"/>
	<xsd:import namespace="http://www.extremenetworks.com/XMLSchema/xos/fdb" schemaLocation="./fdb.xsd"/>
	<xsd:complexType name="switchAccessObject">
		<xsd:annotation>
			<xsd:documentation>
			This is a list of the objects that are accessible using the XML APIs provided in the switch WSDL file.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:choice>
			<xsd:element name="vlanObject" type="vlan:objectList"/>
			<xsd:element name="portObject" type="port:objectList"/>
	 		<xsd:element name="aaaObject" type="aaa:objectList"/>
			<xsd:element name="snmpObject" type="snmp:objectList"/>
			<xsd:element name="systemObject" type="system:objectList"/>
	 		<xsd:element name="fdbObject" type="fdb:objectList"/>
	 		<xsd:element name="idmgrObject" type="idmgr:objectList"/>
	 		<xsd:element name="ipfixObject" type="ipfix:objectList"/>
		</xsd:choice>
	</xsd:complexType>
	<xsd:complexType name="Objects">
		<xsd:annotation>
			<xsd:documentation>
			Container for a set of objects of the type <code>ExosBase</code>.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="object" type="common:ExosBase" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="request">
		<xsd:annotation>
			<xsd:documentation>
			(Not Used)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="object" type="common:ExosBase"/>
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
	                <xsd:attribute name="action" type="xsd:string"/>
	                <xsd:attribute name="maxSize" type="xsd:int"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="response">
		<xsd:annotation>
			<xsd:documentation>
			(Not Used)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="objects" type="Objects"/>
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getRequest">
		 <xsd:annotation>
                        	<xsd:documentation>
                  Defines the message used for get operations.
				  <br/>
				  The <code>filter</code> is used to specify the set of objects to be 
				returned by the operation. The <code>filter</code> is set by creating a 
				concrete instance of the <code>ExosBase</code> abstract element. A <code>getRequest</code> 
				with a <code>filter</code> instance with no values set will return all the objects that 
				match the instance type. Setting one or more values on the <code>filter</code> and using 
				it in a <code>getRequest</code> will only return objects that match these values.
			<br/>
			For example, <code>PortConfig</code> is a concrete instance of <code>ExosBase</code>. This 
			represents port configuration on the switch. Creating an instance of <code>PortConfig</code> 
			and using it in a <code>getRequest</code> will return all the ports configured on the switch. 
			Setting a value on one of the elements of <code>PortConfig</code>, say <code>portList</code> 
			to 1:1, and using it in a <code>getRequest</code> will return port 1:1.
			<br/>
			In some cases the number of objects returned can be large. The load on the switch and network
			traffic can be reduced by using the paging capabilities of <code>getRequest</code>. This can 
			be done specifying a <code>maxSize</code> and setting the <code>action</code> attribute to "next".
			After a page of data is returned, send the next <code>getRequest</code> using the index from the
			last object in the page. This is repeated till the response contains 0 rows.
			<br/>
			For example, to query for all the VLANs configured on a switch 100 rows at a time the first 
			<code>getRequest</code> will use instance of <code>VlanConfig</code> as <code>filter</code>
			and set <code>maxSize</code> to 100 and <code>action</code> to "next". The response to this
			will contain the first 100 VLANs. Since the <code>name</code> is the index for a VLAN, this will
			be set in the <code>filter</code> which, in this case, is an instance of <code>VlanConfig</code>
			for the second request. The response will contain the next 100 VLANs. This procedure is repeated
			till a response is returned that contains 0 rows.
                        </xsd:documentation>
                        </xsd:annotation>

		<xsd:complexType>
			<xsd:sequence>
                                <!-- Filter should contain the concrete object which is inherited from ExosBase -->
                                <xsd:element name="filter" type="common:ExosBase">
                                <xsd:annotation>
                                	<xsd:documentation>
                                        The filter used to specify set of objects to be returned.
                                        </xsd:documentation>
                                </xsd:annotation>
                                </xsd:element>
                                <!-- hdr is optional element, this has to be passed only if hdr is not passed in SOAP:Header -->
                                <xsd:element name="hdr" type="common:ClientHeader" minOccurs="0">
                                <xsd:annotation>
                                	<xsd:documentation>
                                        (Optional) The hdr can be used to pass session related values such as the session id obtained from an openSession operation. This is an optional element as the session data can also be passed as part of the SOAP:Header which is the recommended way to send session details.
                                        </xsd:documentation>
                                </xsd:annotation>
                                </xsd:element>
                                <!-- switchObject is optional, the support is provided only for backward compatability-->
                                <xsd:element name="switchObject" type="xsd:anyType" minOccurs="0">
                                <xsd:annotation>
                                	<xsd:documentation>
                                        (Deprecated) This is an alternate way to specify the filter.
                                        </xsd:documentation>
                                </xsd:annotation>
                                </xsd:element>
			</xsd:sequence>
	                <xsd:attribute name="action" type="xsd:string"/>
	                <xsd:attribute name="maxSize" type="xsd:int"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="getResponse">
                        <xsd:annotation>
                        	<xsd:documentation>
                        Defines the response from a get operation. The response is a set of one or more objects.
                        </xsd:documentation>
                        </xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
                                <xsd:element name="objects" type="Objects">
                                <xsd:annotation>
                                	<xsd:documentation>
                                        The set of objects returned from the get operation. If there are no matching objects, this is an empty set.
                                </xsd:documentation>
                                </xsd:annotation>
                                </xsd:element>
                                <!-- hdr is optional element, this is valid only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setRequest">
			<xsd:annotation>
				<xsd:documentation>
			Defines the message used for set operations.
			The filter is used to specify the object and values to set.
			</xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
                                <!-- Filter should contain the concrete object which is inherited from ExosBase -->
				<xsd:element name="filter" type="common:ExosBase">
				<xsd:annotation>
					<xsd:documentation>
					The filter used to specify the object and values to set.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- hdr is optional element, this has to be passed only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Optional) The hdr can be used to pass session related values such as the session id obtained from an openSession operation. This is an optional element as the session data can also be passed as part of the SOAP:Header which is the recommended way to send session details.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- switchObject is optional, the support is provided only for backward compatability-->
				<xsd:element name="switchObject" type="xsd:anyType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Deprecated) This is an alternate way to specify the filter. 
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setResponse">
			<xsd:annotation>
				<xsd:documentation>
			Defines the response from a set a operation.
			</xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
                                <!-- hdr is optional element, this is valid only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createRequest">
			<xsd:annotation>
				<xsd:documentation>
			Defines the message used for create operations.
			The filter is used to specify the object and values to create.
			</xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
                                <!-- Filter should contain the concrete object which is inherited from ExosBase -->
				<xsd:element name="filter" type="common:ExosBase">
				<xsd:annotation>
					<xsd:documentation>
					The filter used to specify object and values to create.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- hdr is optional element, this has to be passed only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Optional) The hdr can be used to pass session related values such as the session id obtained from an openSession operation. This is an optional element as the session data can also be passed as part of the SOAP:Header which is the recommended way to send session details.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- switchObject is optional, the support is provided only for backward compatability-->
				<xsd:element name="switchObject" type="xsd:anyType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Deprecated) This is an alternate way to specify the filter. 
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createResponse">
		<xsd:complexType>
			<xsd:sequence>
                                <!-- hdr is optional element, this is valid only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteRequest">
			<xsd:annotation>
				<xsd:documentation>
			Defines the message used for delete operations.
			The filter is used to specify the object to delete.
			</xsd:documentation>
			</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
                                <!-- Filter should contain the concrete object which is inherited from ExosBase -->
				<xsd:element name="filter" type="common:ExosBase">
				<xsd:annotation>
					<xsd:documentation>
					The filter used to specify the object to delete.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- hdr is optional element, this has to be passed only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Optional) The hdr can be used to pass session related values such as the session id obtained from an openSession operation. This is an optional element as the session data can also be passed as part of the SOAP:Header which is the recommended way to send session details.
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
                                <!-- switchObject is optional, the support is provided only for backward compatability-->
				<xsd:element name="switchObject" type="xsd:anyType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
					(Deprecated) This is an alternate way to specify the filter. 
					</xsd:documentation>
				</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteResponse">
		<xsd:complexType>
			<xsd:sequence>
                                <!-- hdr is optional element, this is valid only if hdr is not passed in SOAP:Header -->
				<xsd:element name="hdr" type="common:ClientHeader" minOccurs="0"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="objectList">
		<xsd:annotation>
			<xsd:documentation>
			(Not Used)
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="switchObject" type="switchAccessObject" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
